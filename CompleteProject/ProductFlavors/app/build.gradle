plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "pri.weiqiang.study.productflavors"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        flavorDimensions "demo"
    }
    sourceSets {
        main {
            aidl.srcDirs = ['src/main/aidl']
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
        demo001.manifest.srcFile 'src/main/demo001/AndroidManifest.xml'
        demo002.manifest.srcFile 'src/main/demo002/AndroidManifest.xml'

    }

    signingConfigs {

        demo001Debug {
            storeFile file('../demo001.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'demo001'
        }
        demo002Debug {
            storeFile file('../demo002.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'demo002'
        }

        demo001Release {
            storeFile file('../demo001.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'demo001'
        }
        demo002Release {
            storeFile file('../demo002.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'demo002'
        }
    }

    productFlavors {
        demo001 {
            dimension "demo"
        }
        demo002 {
            dimension "demo"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*一代设备要使用aihub1签名必须在左侧BuildVariants中选择aihub1Release,直接运行或者Build APK(s)
选择aihub1Debug,签名文件依然为二代的aihub2.keystore
使用方法为:https://stackoverflow.com/questions/32742184/multiple-signingconfigs-for-multiple-variants?r=SearchResults

task autoSign可以不括起来
*/
    task autoSign {
        def flavorName
        def buildTypeName
        applicationVariants.all {
            flavorName = it.getFlavorName()
            buildTypeName = it.buildType.name
            def buildVariantName = flavorName + buildTypeName.capitalize()
            def currentSigningConfig = signingConfigs.getByName(buildVariantName)
            it.mergedFlavor.signingConfig = currentSigningConfig
            // If you want to sign debug build
            buildTypes.debug.signingConfig = currentSigningConfig
            logger.warn("release flavorName:" + flavorName + " buildTypeName:" + buildTypeName +
                    " buildVariantName:" + buildVariantName + " currentSigningConfig:" + currentSigningConfig)

        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (variant.flavorName == "demo001") {
                    outputFileName = "demo001_" + buildTypeName + "_" + defaultConfig.versionName + ".apk"
                } else if (variant.flavorName == "demo002") {
                    outputFileName = "demo002_" + buildTypeName + "_" + defaultConfig.versionName + ".apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation project(path: ':common')
    demo001Api files('libs/demo001/demo001.jar')
    demo002Api files('libs/demo002/demo002.jar')
}